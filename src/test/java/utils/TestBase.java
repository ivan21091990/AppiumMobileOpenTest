package utils;

import io.appium.java_client.android.AndroidDriver;
import io.appium.java_client.remote.MobileCapabilityType;
import io.qameta.allure.Step;
import org.openqa.selenium.*;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.Wait;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeMethod;
import java.net.MalformedURLException;
import java.net.URL;

import static org.testng.Assert.fail;

public class TestBase {
    protected WebDriver driver;

    @BeforeMethod()
    @Step("Выполняем подключение")
    public void connectBrowser() throws MalformedURLException {
        DesiredCapabilities capabilities = DesiredCapabilities.android();
        capabilities.setCapability(MobileCapabilityType.AUTOMATION_NAME, "uiautomator2");
        capabilities.setCapability(MobileCapabilityType.PLATFORM_NAME, "Android");
        capabilities.setCapability(MobileCapabilityType.PLATFORM_VERSION, "10");
        capabilities.setCapability(MobileCapabilityType.DEVICE_NAME, "Pixel 3 XL API 29");
        capabilities.setCapability("chromedriverExecutable", "C:\\Windows\\System32\\node_modules\\appium\\node_modules\\appium-chromedriver\\chromedriver\\win\\chromedriver.exe");
        capabilities.setCapability(MobileCapabilityType.BROWSER_NAME, "Chrome");

        driver = new AndroidDriver<>(new URL("http://0.0.0.0:4723/wd/hub"), capabilities);
        driver.get("https://www.open.ru/");
    }

    @AfterMethod()
    @Step("Выполняем закрытие браузера")
    public void tearDown() {
        if (driver != null)
            driver.quit();
    }

    @Step("Выполняем клик по элементу  - {0}")
    public void click(WebElement element) {
        ((JavascriptExecutor) driver).executeScript("arguments[0].click();", element);
    }

    @Step("Ожидание видимости элемента - {0}")
    public void waitVisibility(WebElement element) {
        try {
            Wait<WebDriver> wait = new WebDriverWait(driver, 90, 1000);
            wait.until(ExpectedConditions.visibilityOf(element));
        } catch (TimeoutException ex) {
            fail("Не дождались появления элемента " + element + "в течении 90 секунд");
        }
    }

    @Step("Выполняем скролл к элементу с текстом - {0}")
    public void scrollToText(String textValue) {
        ((JavascriptExecutor) driver).executeScript("arguments[0].scrollIntoView()", driver.findElement(By.xpath("//*[text()='" + textValue + "']")));
    }
}
